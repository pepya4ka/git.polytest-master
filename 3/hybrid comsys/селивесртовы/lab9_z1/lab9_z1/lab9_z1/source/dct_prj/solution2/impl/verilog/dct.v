// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="dct,hls_ip_2019_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.790000,HLS_SYN_LAT=899,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=8,HLS_SYN_FF=1476,HLS_SYN_LUT=1735,HLS_VERSION=2019_1}" *)

module dct (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_r_address0,
        input_r_ce0,
        input_r_q0,
        output_r_address0,
        output_r_ce0,
        output_r_we0,
        output_r_d0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_state6 = 6'd4;
parameter    ap_ST_fsm_state7 = 6'd8;
parameter    ap_ST_fsm_pp1_stage0 = 6'd16;
parameter    ap_ST_fsm_state12 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] input_r_address0;
output   input_r_ce0;
input  [15:0] input_r_q0;
output  [5:0] output_r_address0;
output   output_r_ce0;
output   output_r_we0;
output  [15:0] output_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_r_ce0;
reg output_r_ce0;
reg output_r_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_136;
reg   [3:0] r_0_i_reg_147;
reg   [3:0] c_0_i_reg_158;
reg   [6:0] indvar_flatten11_reg_169;
reg   [3:0] r_0_i2_reg_180;
reg   [3:0] c_0_i4_reg_191;
wire   [0:0] icmp_ln59_fu_224_p2;
reg   [0:0] icmp_ln59_reg_415;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln59_reg_415_pp0_iter1_reg;
reg   [0:0] icmp_ln59_reg_415_pp0_iter2_reg;
wire   [6:0] add_ln59_fu_230_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln59_fu_248_p3;
reg   [3:0] select_ln59_reg_424;
reg   [3:0] select_ln59_reg_424_pp0_iter1_reg;
reg   [3:0] select_ln59_reg_424_pp0_iter2_reg;
wire   [3:0] select_ln59_1_fu_256_p3;
reg   [3:0] select_ln59_1_reg_430;
reg   [3:0] select_ln59_1_reg_430_pp0_iter1_reg;
reg   [3:0] select_ln59_1_reg_430_pp0_iter2_reg;
wire   [2:0] trunc_ln59_fu_264_p1;
reg   [2:0] trunc_ln59_reg_436;
wire   [3:0] c_fu_268_p2;
reg   [15:0] input_load_reg_451;
wire   [0:0] icmp_ln71_fu_320_p2;
reg   [0:0] icmp_ln71_reg_456;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state8_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_state10_pp1_stage0_iter2;
wire    ap_block_state11_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln71_reg_456_pp1_iter1_reg;
reg   [0:0] icmp_ln71_reg_456_pp1_iter2_reg;
wire   [6:0] add_ln71_fu_326_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln71_fu_344_p3;
reg   [3:0] select_ln71_reg_465;
wire   [3:0] select_ln71_1_fu_352_p3;
reg   [3:0] select_ln71_1_reg_471;
wire   [2:0] trunc_ln71_fu_360_p1;
reg   [2:0] trunc_ln71_reg_477;
wire   [3:0] c_1_fu_364_p2;
wire   [5:0] add_ln74_fu_405_p2;
reg   [5:0] add_ln74_reg_492;
reg   [5:0] add_ln74_reg_492_pp1_iter2_reg;
wire   [15:0] buf_2d_out_q0;
reg   [15:0] buf_2d_out_load_reg_497;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state7;
wire    grp_dct_2d_fu_202_ap_ready;
wire    grp_dct_2d_fu_202_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state8;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [5:0] buf_2d_in_address0;
reg    buf_2d_in_ce0;
reg    buf_2d_in_we0;
wire   [15:0] buf_2d_in_q0;
reg    buf_2d_in_ce1;
wire   [15:0] buf_2d_in_q1;
reg   [5:0] buf_2d_out_address0;
reg    buf_2d_out_ce0;
reg    buf_2d_out_we0;
wire    grp_dct_2d_fu_202_ap_start;
wire    grp_dct_2d_fu_202_ap_idle;
wire   [5:0] grp_dct_2d_fu_202_in_block_address0;
wire    grp_dct_2d_fu_202_in_block_ce0;
wire   [5:0] grp_dct_2d_fu_202_in_block_address1;
wire    grp_dct_2d_fu_202_in_block_ce1;
wire   [5:0] grp_dct_2d_fu_202_out_block_address0;
wire    grp_dct_2d_fu_202_out_block_ce0;
wire    grp_dct_2d_fu_202_out_block_we0;
wire   [15:0] grp_dct_2d_fu_202_out_block_d0;
reg   [3:0] ap_phi_mux_r_0_i_phi_fu_151_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_r_0_i2_phi_fu_184_p4;
wire    ap_block_pp1_stage0;
reg    grp_dct_2d_fu_202_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln62_fu_290_p1;
wire   [63:0] zext_ln62_2_fu_315_p1;
wire   [63:0] zext_ln74_1_fu_400_p1;
wire   [63:0] zext_ln74_2_fu_411_p1;
wire   [0:0] icmp_ln61_fu_242_p2;
wire   [3:0] r_fu_236_p2;
wire   [5:0] zext_ln61_fu_281_p1;
wire   [5:0] shl_ln62_mid2_fu_274_p3;
wire   [5:0] add_ln62_fu_284_p2;
wire   [6:0] tmp_s_fu_295_p3;
wire   [7:0] zext_ln61_1_fu_302_p1;
wire   [7:0] zext_ln62_1_fu_306_p1;
wire   [7:0] add_ln62_1_fu_309_p2;
wire   [0:0] icmp_ln73_fu_338_p2;
wire   [3:0] r_1_fu_332_p2;
wire   [6:0] tmp_3_fu_370_p3;
wire   [7:0] zext_ln71_fu_377_p1;
wire   [7:0] zext_ln74_fu_391_p1;
wire   [7:0] add_ln74_1_fu_394_p2;
wire   [5:0] zext_ln73_fu_388_p1;
wire   [5:0] shl_ln74_mid2_fu_381_p3;
wire    ap_CS_fsm_state12;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 grp_dct_2d_fu_202_ap_start_reg = 1'b0;
end

dct_2d_col_inbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_in_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_in_address0),
    .ce0(buf_2d_in_ce0),
    .we0(buf_2d_in_we0),
    .d0(input_load_reg_451),
    .q0(buf_2d_in_q0),
    .address1(grp_dct_2d_fu_202_in_block_address1),
    .ce1(buf_2d_in_ce1),
    .q1(buf_2d_in_q1)
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
buf_2d_out_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2d_out_address0),
    .ce0(buf_2d_out_ce0),
    .we0(buf_2d_out_we0),
    .d0(grp_dct_2d_fu_202_out_block_d0),
    .q0(buf_2d_out_q0)
);

dct_2d grp_dct_2d_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_2d_fu_202_ap_start),
    .ap_done(grp_dct_2d_fu_202_ap_done),
    .ap_idle(grp_dct_2d_fu_202_ap_idle),
    .ap_ready(grp_dct_2d_fu_202_ap_ready),
    .in_block_address0(grp_dct_2d_fu_202_in_block_address0),
    .in_block_ce0(grp_dct_2d_fu_202_in_block_ce0),
    .in_block_q0(buf_2d_in_q0),
    .in_block_address1(grp_dct_2d_fu_202_in_block_address1),
    .in_block_ce1(grp_dct_2d_fu_202_in_block_ce1),
    .in_block_q1(buf_2d_in_q1),
    .out_block_address0(grp_dct_2d_fu_202_out_block_address0),
    .out_block_ce0(grp_dct_2d_fu_202_out_block_ce0),
    .out_block_we0(grp_dct_2d_fu_202_out_block_we0),
    .out_block_d0(grp_dct_2d_fu_202_out_block_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state8) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state8)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state8);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dct_2d_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_dct_2d_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_dct_2d_fu_202_ap_ready == 1'b1)) begin
            grp_dct_2d_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_320_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        c_0_i4_reg_191 <= c_1_fu_364_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
        c_0_i4_reg_191 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_i_reg_158 <= c_fu_268_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        c_0_i_reg_158 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_320_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten11_reg_169 <= add_ln71_fu_326_p2;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
        indvar_flatten11_reg_169 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_136 <= add_ln59_fu_230_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_136 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_456 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        r_0_i2_reg_180 <= select_ln71_1_reg_471;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
        r_0_i2_reg_180 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_reg_415 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        r_0_i_reg_147 <= select_ln59_1_reg_430;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        r_0_i_reg_147 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_456 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln74_reg_492 <= add_ln74_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln74_reg_492_pp1_iter2_reg <= add_ln74_reg_492;
        icmp_ln71_reg_456_pp1_iter2_reg <= icmp_ln71_reg_456_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_reg_456_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2d_out_load_reg_497 <= buf_2d_out_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln59_reg_415 <= icmp_ln59_fu_224_p2;
        icmp_ln59_reg_415_pp0_iter1_reg <= icmp_ln59_reg_415;
        select_ln59_1_reg_430_pp0_iter1_reg <= select_ln59_1_reg_430;
        select_ln59_reg_424_pp0_iter1_reg <= select_ln59_reg_424;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln59_reg_415_pp0_iter2_reg <= icmp_ln59_reg_415_pp0_iter1_reg;
        select_ln59_1_reg_430_pp0_iter2_reg <= select_ln59_1_reg_430_pp0_iter1_reg;
        select_ln59_reg_424_pp0_iter2_reg <= select_ln59_reg_424_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln71_reg_456 <= icmp_ln71_fu_320_p2;
        icmp_ln71_reg_456_pp1_iter1_reg <= icmp_ln71_reg_456;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln59_reg_415_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        input_load_reg_451 <= input_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln59_1_reg_430 <= select_ln59_1_fu_256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln59_fu_224_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        select_ln59_reg_424 <= select_ln59_fu_248_p3;
        trunc_ln59_reg_436 <= trunc_ln59_fu_264_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_320_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln71_1_reg_471 <= select_ln71_1_fu_352_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln71_fu_320_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln71_reg_465 <= select_ln71_fu_344_p3;
        trunc_ln71_reg_477 <= trunc_ln71_fu_360_p1;
    end
end

always @ (*) begin
    if ((icmp_ln59_fu_224_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln71_fu_320_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state8 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state8 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_456 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_r_0_i2_phi_fu_184_p4 = select_ln71_1_reg_471;
    end else begin
        ap_phi_mux_r_0_i2_phi_fu_184_p4 = r_0_i2_reg_180;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_415 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_phi_mux_r_0_i_phi_fu_151_p4 = select_ln59_1_reg_430;
    end else begin
        ap_phi_mux_r_0_i_phi_fu_151_p4 = r_0_i_reg_147;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_address0 = zext_ln62_2_fu_315_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_in_address0 = grp_dct_2d_fu_202_in_block_address0;
    end else begin
        buf_2d_in_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_in_ce0 = grp_dct_2d_fu_202_in_block_ce0;
    end else begin
        buf_2d_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_in_ce1 = grp_dct_2d_fu_202_in_block_ce1;
    end else begin
        buf_2d_in_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln59_reg_415_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2d_in_we0 = 1'b1;
    end else begin
        buf_2d_in_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_2d_out_address0 = zext_ln74_1_fu_400_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_out_address0 = grp_dct_2d_fu_202_out_block_address0;
    end else begin
        buf_2d_out_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        buf_2d_out_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_out_ce0 = grp_dct_2d_fu_202_out_block_ce0;
    end else begin
        buf_2d_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_2d_out_we0 = grp_dct_2d_fu_202_out_block_we0;
    end else begin
        buf_2d_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        input_r_ce0 = 1'b1;
    end else begin
        input_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln71_reg_456_pp1_iter2_reg == 1'd0) & (ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln59_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln59_fu_224_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_dct_2d_fu_202_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln71_fu_320_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b1) & (ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln71_fu_320_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln59_fu_230_p2 = (indvar_flatten_reg_136 + 7'd1);

assign add_ln62_1_fu_309_p2 = (zext_ln61_1_fu_302_p1 + zext_ln62_1_fu_306_p1);

assign add_ln62_fu_284_p2 = (zext_ln61_fu_281_p1 + shl_ln62_mid2_fu_274_p3);

assign add_ln71_fu_326_p2 = (indvar_flatten11_reg_169 + 7'd1);

assign add_ln74_1_fu_394_p2 = (zext_ln71_fu_377_p1 + zext_ln74_fu_391_p1);

assign add_ln74_fu_405_p2 = (zext_ln73_fu_388_p1 + shl_ln74_mid2_fu_381_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign c_1_fu_364_p2 = (4'd1 + select_ln71_fu_344_p3);

assign c_fu_268_p2 = (4'd1 + select_ln59_fu_248_p3);

assign grp_dct_2d_fu_202_ap_start = grp_dct_2d_fu_202_ap_start_reg;

assign icmp_ln59_fu_224_p2 = ((indvar_flatten_reg_136 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln61_fu_242_p2 = ((c_0_i_reg_158 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_320_p2 = ((indvar_flatten11_reg_169 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_338_p2 = ((c_0_i4_reg_191 == 4'd8) ? 1'b1 : 1'b0);

assign input_r_address0 = zext_ln62_fu_290_p1;

assign output_r_address0 = zext_ln74_2_fu_411_p1;

assign output_r_d0 = buf_2d_out_load_reg_497;

assign r_1_fu_332_p2 = (4'd1 + ap_phi_mux_r_0_i2_phi_fu_184_p4);

assign r_fu_236_p2 = (4'd1 + ap_phi_mux_r_0_i_phi_fu_151_p4);

assign select_ln59_1_fu_256_p3 = ((icmp_ln61_fu_242_p2[0:0] === 1'b1) ? r_fu_236_p2 : ap_phi_mux_r_0_i_phi_fu_151_p4);

assign select_ln59_fu_248_p3 = ((icmp_ln61_fu_242_p2[0:0] === 1'b1) ? 4'd0 : c_0_i_reg_158);

assign select_ln71_1_fu_352_p3 = ((icmp_ln73_fu_338_p2[0:0] === 1'b1) ? r_1_fu_332_p2 : ap_phi_mux_r_0_i2_phi_fu_184_p4);

assign select_ln71_fu_344_p3 = ((icmp_ln73_fu_338_p2[0:0] === 1'b1) ? 4'd0 : c_0_i4_reg_191);

assign shl_ln62_mid2_fu_274_p3 = {{trunc_ln59_reg_436}, {3'd0}};

assign shl_ln74_mid2_fu_381_p3 = {{trunc_ln71_reg_477}, {3'd0}};

assign tmp_3_fu_370_p3 = {{select_ln71_1_reg_471}, {3'd0}};

assign tmp_s_fu_295_p3 = {{select_ln59_1_reg_430_pp0_iter2_reg}, {3'd0}};

assign trunc_ln59_fu_264_p1 = select_ln59_1_fu_256_p3[2:0];

assign trunc_ln71_fu_360_p1 = select_ln71_1_fu_352_p3[2:0];

assign zext_ln61_1_fu_302_p1 = tmp_s_fu_295_p3;

assign zext_ln61_fu_281_p1 = select_ln59_reg_424;

assign zext_ln62_1_fu_306_p1 = select_ln59_reg_424_pp0_iter2_reg;

assign zext_ln62_2_fu_315_p1 = add_ln62_1_fu_309_p2;

assign zext_ln62_fu_290_p1 = add_ln62_fu_284_p2;

assign zext_ln71_fu_377_p1 = tmp_3_fu_370_p3;

assign zext_ln73_fu_388_p1 = select_ln71_reg_465;

assign zext_ln74_1_fu_400_p1 = add_ln74_1_fu_394_p2;

assign zext_ln74_2_fu_411_p1 = add_ln74_reg_492_pp1_iter2_reg;

assign zext_ln74_fu_391_p1 = select_ln71_reg_465;

endmodule //dct
