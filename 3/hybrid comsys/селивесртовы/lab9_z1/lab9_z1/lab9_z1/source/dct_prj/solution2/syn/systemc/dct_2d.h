// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dct_2d_HH_
#define _dct_2d_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dct_1d2.h"
#include "dct_2d_row_outbuf.h"
#include "dct_2d_col_inbuf.h"

namespace ap_rtl {

struct dct_2d : public sc_module {
    // Port declarations 16
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<6> > in_block_address0;
    sc_out< sc_logic > in_block_ce0;
    sc_in< sc_lv<16> > in_block_q0;
    sc_out< sc_lv<6> > in_block_address1;
    sc_out< sc_logic > in_block_ce1;
    sc_in< sc_lv<16> > in_block_q1;
    sc_out< sc_lv<6> > out_block_address0;
    sc_out< sc_logic > out_block_ce0;
    sc_out< sc_logic > out_block_we0;
    sc_out< sc_lv<16> > out_block_d0;


    // Module declarations
    dct_2d(sc_module_name name);
    SC_HAS_PROCESS(dct_2d);

    ~dct_2d();

    sc_trace_file* mVcdFile;

    dct_2d_row_outbuf* row_outbuf_U;
    dct_2d_row_outbuf* col_outbuf_U;
    dct_2d_col_inbuf* col_inbuf_U;
    dct_1d2* grp_dct_1d2_fu_227;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<7> > indvar_flatten_reg_149;
    sc_signal< sc_lv<4> > j_0_reg_160;
    sc_signal< sc_lv<4> > i_1_reg_171;
    sc_signal< sc_lv<7> > indvar_flatten11_reg_194;
    sc_signal< sc_lv<4> > j_1_reg_205;
    sc_signal< sc_lv<4> > i_3_reg_216;
    sc_signal< sc_lv<1> > icmp_ln32_fu_256_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<4> > i_fu_262_p2;
    sc_signal< sc_lv<4> > i_reg_476;
    sc_signal< sc_lv<1> > icmp_ln37_fu_268_p2;
    sc_signal< sc_lv<1> > icmp_ln37_reg_481;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln37_reg_481_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln37_reg_481_pp0_iter2_reg;
    sc_signal< sc_lv<7> > add_ln37_fu_274_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<4> > select_ln40_fu_292_p3;
    sc_signal< sc_lv<4> > select_ln40_reg_490;
    sc_signal< sc_lv<4> > select_ln40_reg_490_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln40_reg_490_pp0_iter2_reg;
    sc_signal< sc_lv<4> > select_ln40_1_fu_300_p3;
    sc_signal< sc_lv<4> > select_ln40_1_reg_496;
    sc_signal< sc_lv<4> > select_ln40_1_reg_496_pp0_iter1_reg;
    sc_signal< sc_lv<4> > select_ln40_1_reg_496_pp0_iter2_reg;
    sc_signal< sc_lv<4> > i_4_fu_308_p2;
    sc_signal< sc_lv<16> > row_outbuf_q0;
    sc_signal< sc_lv<16> > row_outbuf_load_reg_513;
    sc_signal< sc_lv<1> > icmp_ln43_fu_364_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<4> > i_5_fu_370_p2;
    sc_signal< sc_lv<4> > i_5_reg_522;
    sc_signal< sc_lv<1> > icmp_ln48_fu_376_p2;
    sc_signal< sc_lv<1> > icmp_ln48_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state12_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state13_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state14_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln48_reg_527_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln48_reg_527_pp1_iter2_reg;
    sc_signal< sc_lv<7> > add_ln48_fu_382_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<4> > select_ln51_fu_400_p3;
    sc_signal< sc_lv<4> > select_ln51_reg_536;
    sc_signal< sc_lv<4> > select_ln51_reg_536_pp1_iter1_reg;
    sc_signal< sc_lv<4> > select_ln51_reg_536_pp1_iter2_reg;
    sc_signal< sc_lv<4> > select_ln51_1_fu_408_p3;
    sc_signal< sc_lv<4> > select_ln51_1_reg_542;
    sc_signal< sc_lv<4> > select_ln51_1_reg_542_pp1_iter1_reg;
    sc_signal< sc_lv<4> > select_ln51_1_reg_542_pp1_iter2_reg;
    sc_signal< sc_lv<4> > i_6_fu_416_p2;
    sc_signal< sc_lv<16> > col_outbuf_q0;
    sc_signal< sc_lv<16> > col_outbuf_load_reg_559;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state11;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<6> > row_outbuf_address0;
    sc_signal< sc_logic > row_outbuf_ce0;
    sc_signal< sc_logic > row_outbuf_we0;
    sc_signal< sc_lv<6> > col_outbuf_address0;
    sc_signal< sc_logic > col_outbuf_ce0;
    sc_signal< sc_logic > col_outbuf_we0;
    sc_signal< sc_lv<6> > col_inbuf_address0;
    sc_signal< sc_logic > col_inbuf_ce0;
    sc_signal< sc_logic > col_inbuf_we0;
    sc_signal< sc_lv<16> > col_inbuf_q0;
    sc_signal< sc_logic > col_inbuf_ce1;
    sc_signal< sc_lv<16> > col_inbuf_q1;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_ap_start;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_ap_done;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_ap_idle;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_ap_ready;
    sc_signal< sc_lv<6> > grp_dct_1d2_fu_227_src_address0;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_src_ce0;
    sc_signal< sc_lv<16> > grp_dct_1d2_fu_227_src_q0;
    sc_signal< sc_lv<6> > grp_dct_1d2_fu_227_src_address1;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_src_ce1;
    sc_signal< sc_lv<16> > grp_dct_1d2_fu_227_src_q1;
    sc_signal< sc_lv<4> > grp_dct_1d2_fu_227_src_offset;
    sc_signal< sc_lv<6> > grp_dct_1d2_fu_227_dst_address0;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_dst_ce0;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_dst_we0;
    sc_signal< sc_lv<16> > grp_dct_1d2_fu_227_dst_d0;
    sc_signal< sc_lv<4> > grp_dct_1d2_fu_227_dst_offset;
    sc_signal< sc_lv<4> > i_0_reg_137;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > ap_phi_mux_j_0_phi_fu_164_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > i_2_reg_182;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > ap_phi_mux_j_1_phi_fu_209_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > grp_dct_1d2_fu_227_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln40_4_fu_334_p1;
    sc_signal< sc_lv<64> > zext_ln40_5_fu_359_p1;
    sc_signal< sc_lv<64> > zext_ln51_5_fu_442_p1;
    sc_signal< sc_lv<64> > zext_ln51_3_fu_467_p1;
    sc_signal< sc_lv<1> > icmp_ln39_fu_286_p2;
    sc_signal< sc_lv<4> > j_fu_280_p2;
    sc_signal< sc_lv<7> > tmp_1_fu_317_p3;
    sc_signal< sc_lv<8> > zext_ln40_fu_314_p1;
    sc_signal< sc_lv<8> > zext_ln40_3_fu_324_p1;
    sc_signal< sc_lv<8> > add_ln40_fu_328_p2;
    sc_signal< sc_lv<7> > tmp_fu_339_p3;
    sc_signal< sc_lv<8> > zext_ln40_2_fu_350_p1;
    sc_signal< sc_lv<8> > zext_ln40_1_fu_346_p1;
    sc_signal< sc_lv<8> > add_ln40_1_fu_353_p2;
    sc_signal< sc_lv<1> > icmp_ln50_fu_394_p2;
    sc_signal< sc_lv<4> > j_2_fu_388_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_425_p3;
    sc_signal< sc_lv<8> > zext_ln51_fu_422_p1;
    sc_signal< sc_lv<8> > zext_ln51_4_fu_432_p1;
    sc_signal< sc_lv<8> > add_ln51_1_fu_436_p2;
    sc_signal< sc_lv<7> > tmp_2_fu_447_p3;
    sc_signal< sc_lv<8> > zext_ln51_2_fu_458_p1;
    sc_signal< sc_lv<8> > zext_ln51_1_fu_454_p1;
    sc_signal< sc_lv<8> > add_ln51_fu_461_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<9> ap_ST_fsm_state10;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state15;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln37_fu_274_p2();
    void thread_add_ln40_1_fu_353_p2();
    void thread_add_ln40_fu_328_p2();
    void thread_add_ln48_fu_382_p2();
    void thread_add_ln51_1_fu_436_p2();
    void thread_add_ln51_fu_461_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state11_pp1_stage0_iter0();
    void thread_ap_block_state12_pp1_stage0_iter1();
    void thread_ap_block_state13_pp1_stage0_iter2();
    void thread_ap_block_state14_pp1_stage0_iter3();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage0_iter1();
    void thread_ap_block_state6_pp0_stage0_iter2();
    void thread_ap_block_state7_pp0_stage0_iter3();
    void thread_ap_condition_pp0_exit_iter0_state4();
    void thread_ap_condition_pp1_exit_iter0_state11();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_j_0_phi_fu_164_p4();
    void thread_ap_phi_mux_j_1_phi_fu_209_p4();
    void thread_ap_ready();
    void thread_col_inbuf_address0();
    void thread_col_inbuf_ce0();
    void thread_col_inbuf_ce1();
    void thread_col_inbuf_we0();
    void thread_col_outbuf_address0();
    void thread_col_outbuf_ce0();
    void thread_col_outbuf_we0();
    void thread_grp_dct_1d2_fu_227_ap_start();
    void thread_grp_dct_1d2_fu_227_dst_offset();
    void thread_grp_dct_1d2_fu_227_src_offset();
    void thread_grp_dct_1d2_fu_227_src_q0();
    void thread_grp_dct_1d2_fu_227_src_q1();
    void thread_i_4_fu_308_p2();
    void thread_i_5_fu_370_p2();
    void thread_i_6_fu_416_p2();
    void thread_i_fu_262_p2();
    void thread_icmp_ln32_fu_256_p2();
    void thread_icmp_ln37_fu_268_p2();
    void thread_icmp_ln39_fu_286_p2();
    void thread_icmp_ln43_fu_364_p2();
    void thread_icmp_ln48_fu_376_p2();
    void thread_icmp_ln50_fu_394_p2();
    void thread_in_block_address0();
    void thread_in_block_address1();
    void thread_in_block_ce0();
    void thread_in_block_ce1();
    void thread_j_2_fu_388_p2();
    void thread_j_fu_280_p2();
    void thread_out_block_address0();
    void thread_out_block_ce0();
    void thread_out_block_d0();
    void thread_out_block_we0();
    void thread_row_outbuf_address0();
    void thread_row_outbuf_ce0();
    void thread_row_outbuf_we0();
    void thread_select_ln40_1_fu_300_p3();
    void thread_select_ln40_fu_292_p3();
    void thread_select_ln51_1_fu_408_p3();
    void thread_select_ln51_fu_400_p3();
    void thread_tmp_1_fu_317_p3();
    void thread_tmp_2_fu_447_p3();
    void thread_tmp_3_fu_425_p3();
    void thread_tmp_fu_339_p3();
    void thread_zext_ln40_1_fu_346_p1();
    void thread_zext_ln40_2_fu_350_p1();
    void thread_zext_ln40_3_fu_324_p1();
    void thread_zext_ln40_4_fu_334_p1();
    void thread_zext_ln40_5_fu_359_p1();
    void thread_zext_ln40_fu_314_p1();
    void thread_zext_ln51_1_fu_454_p1();
    void thread_zext_ln51_2_fu_458_p1();
    void thread_zext_ln51_3_fu_467_p1();
    void thread_zext_ln51_4_fu_432_p1();
    void thread_zext_ln51_5_fu_442_p1();
    void thread_zext_ln51_fu_422_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
