// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dct_2d (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_block_0_address0,
        in_block_0_ce0,
        in_block_0_q0,
        in_block_1_address0,
        in_block_1_ce0,
        in_block_1_q0,
        in_block_2_address0,
        in_block_2_ce0,
        in_block_2_q0,
        in_block_3_address0,
        in_block_3_ce0,
        in_block_3_q0,
        in_block_4_address0,
        in_block_4_ce0,
        in_block_4_q0,
        in_block_5_address0,
        in_block_5_ce0,
        in_block_5_q0,
        in_block_6_address0,
        in_block_6_ce0,
        in_block_6_q0,
        in_block_7_address0,
        in_block_7_ce0,
        in_block_7_q0,
        out_block_address0,
        out_block_ce0,
        out_block_we0,
        out_block_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_pp0_stage0 = 9'd8;
parameter    ap_ST_fsm_state7 = 9'd16;
parameter    ap_ST_fsm_state8 = 9'd32;
parameter    ap_ST_fsm_state9 = 9'd64;
parameter    ap_ST_fsm_pp1_stage0 = 9'd128;
parameter    ap_ST_fsm_state14 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] in_block_0_address0;
output   in_block_0_ce0;
input  [15:0] in_block_0_q0;
output  [2:0] in_block_1_address0;
output   in_block_1_ce0;
input  [15:0] in_block_1_q0;
output  [2:0] in_block_2_address0;
output   in_block_2_ce0;
input  [15:0] in_block_2_q0;
output  [2:0] in_block_3_address0;
output   in_block_3_ce0;
input  [15:0] in_block_3_q0;
output  [2:0] in_block_4_address0;
output   in_block_4_ce0;
input  [15:0] in_block_4_q0;
output  [2:0] in_block_5_address0;
output   in_block_5_ce0;
input  [15:0] in_block_5_q0;
output  [2:0] in_block_6_address0;
output   in_block_6_ce0;
input  [15:0] in_block_6_q0;
output  [2:0] in_block_7_address0;
output   in_block_7_ce0;
input  [15:0] in_block_7_q0;
output  [5:0] out_block_address0;
output   out_block_ce0;
output   out_block_we0;
output  [15:0] out_block_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_block_0_ce0;
reg in_block_1_ce0;
reg in_block_2_ce0;
reg in_block_3_ce0;
reg in_block_4_ce0;
reg in_block_5_ce0;
reg in_block_6_ce0;
reg in_block_7_ce0;
reg out_block_ce0;
reg out_block_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] indvar_flatten_reg_295;
reg   [3:0] j_0_reg_306;
reg   [3:0] i_1_reg_317;
reg   [6:0] indvar_flatten19_reg_340;
reg   [3:0] j_1_reg_351;
reg   [3:0] i_3_reg_362;
wire   [0:0] icmp_ln32_fu_416_p2;
wire    ap_CS_fsm_state2;
wire   [3:0] i_fu_422_p2;
reg   [3:0] i_reg_626;
wire   [0:0] icmp_ln37_fu_428_p2;
reg   [0:0] icmp_ln37_reg_631;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [6:0] add_ln37_fu_434_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] select_ln40_fu_452_p3;
reg   [3:0] select_ln40_reg_640;
wire   [3:0] select_ln40_1_fu_460_p3;
reg   [3:0] select_ln40_1_reg_645;
reg   [3:0] select_ln40_1_reg_645_pp0_iter1_reg;
wire   [2:0] trunc_ln40_fu_468_p1;
reg   [2:0] trunc_ln40_reg_652;
reg   [2:0] trunc_ln40_reg_652_pp0_iter1_reg;
wire   [3:0] i_5_fu_472_p2;
wire   [0:0] icmp_ln43_fu_514_p2;
wire    ap_CS_fsm_state8;
wire   [3:0] i_4_fu_520_p2;
reg   [3:0] i_4_reg_670;
wire   [0:0] icmp_ln48_fu_526_p2;
reg   [0:0] icmp_ln48_reg_675;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state10_pp1_stage0_iter0;
wire    ap_block_state11_pp1_stage0_iter1;
wire    ap_block_state12_pp1_stage0_iter2;
wire    ap_block_state13_pp1_stage0_iter3;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln48_reg_675_pp1_iter1_reg;
reg   [0:0] icmp_ln48_reg_675_pp1_iter2_reg;
wire   [6:0] add_ln48_fu_532_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] select_ln51_fu_550_p3;
reg   [3:0] select_ln51_reg_684;
reg   [3:0] select_ln51_reg_684_pp1_iter1_reg;
reg   [3:0] select_ln51_reg_684_pp1_iter2_reg;
wire   [3:0] select_ln51_1_fu_558_p3;
reg   [3:0] select_ln51_1_reg_690;
reg   [3:0] select_ln51_1_reg_690_pp1_iter1_reg;
reg   [3:0] select_ln51_1_reg_690_pp1_iter2_reg;
wire   [3:0] i_6_fu_566_p2;
wire   [15:0] col_outbuf_q0;
reg   [15:0] col_outbuf_load_reg_707;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state10;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg   [5:0] row_outbuf_address0;
reg    row_outbuf_ce0;
reg    row_outbuf_we0;
wire   [15:0] row_outbuf_q0;
reg   [5:0] col_outbuf_address0;
reg    col_outbuf_ce0;
reg    col_outbuf_we0;
reg   [2:0] col_inbuf_0_address0;
reg    col_inbuf_0_ce0;
reg    col_inbuf_0_we0;
wire   [15:0] col_inbuf_0_q0;
reg   [2:0] col_inbuf_1_address0;
reg    col_inbuf_1_ce0;
reg    col_inbuf_1_we0;
wire   [15:0] col_inbuf_1_q0;
reg   [2:0] col_inbuf_2_address0;
reg    col_inbuf_2_ce0;
reg    col_inbuf_2_we0;
wire   [15:0] col_inbuf_2_q0;
reg   [2:0] col_inbuf_3_address0;
reg    col_inbuf_3_ce0;
reg    col_inbuf_3_we0;
wire   [15:0] col_inbuf_3_q0;
reg   [2:0] col_inbuf_4_address0;
reg    col_inbuf_4_ce0;
reg    col_inbuf_4_we0;
wire   [15:0] col_inbuf_4_q0;
reg   [2:0] col_inbuf_5_address0;
reg    col_inbuf_5_ce0;
reg    col_inbuf_5_we0;
wire   [15:0] col_inbuf_5_q0;
reg   [2:0] col_inbuf_6_address0;
reg    col_inbuf_6_ce0;
reg    col_inbuf_6_we0;
wire   [15:0] col_inbuf_6_q0;
reg   [2:0] col_inbuf_7_address0;
reg    col_inbuf_7_ce0;
reg    col_inbuf_7_we0;
wire   [15:0] col_inbuf_7_q0;
wire    grp_dct_1d_fu_373_ap_start;
wire    grp_dct_1d_fu_373_ap_done;
wire    grp_dct_1d_fu_373_ap_idle;
wire    grp_dct_1d_fu_373_ap_ready;
wire   [2:0] grp_dct_1d_fu_373_src_address0;
wire    grp_dct_1d_fu_373_src_ce0;
reg   [15:0] grp_dct_1d_fu_373_src_q0;
wire   [2:0] grp_dct_1d_fu_373_src1_address0;
wire    grp_dct_1d_fu_373_src1_ce0;
reg   [15:0] grp_dct_1d_fu_373_src1_q0;
wire   [2:0] grp_dct_1d_fu_373_src2_address0;
wire    grp_dct_1d_fu_373_src2_ce0;
reg   [15:0] grp_dct_1d_fu_373_src2_q0;
wire   [2:0] grp_dct_1d_fu_373_src3_address0;
wire    grp_dct_1d_fu_373_src3_ce0;
reg   [15:0] grp_dct_1d_fu_373_src3_q0;
wire   [2:0] grp_dct_1d_fu_373_src4_address0;
wire    grp_dct_1d_fu_373_src4_ce0;
reg   [15:0] grp_dct_1d_fu_373_src4_q0;
wire   [2:0] grp_dct_1d_fu_373_src5_address0;
wire    grp_dct_1d_fu_373_src5_ce0;
reg   [15:0] grp_dct_1d_fu_373_src5_q0;
wire   [2:0] grp_dct_1d_fu_373_src6_address0;
wire    grp_dct_1d_fu_373_src6_ce0;
reg   [15:0] grp_dct_1d_fu_373_src6_q0;
wire   [2:0] grp_dct_1d_fu_373_src7_address0;
wire    grp_dct_1d_fu_373_src7_ce0;
reg   [15:0] grp_dct_1d_fu_373_src7_q0;
reg   [3:0] grp_dct_1d_fu_373_src_offset;
wire   [5:0] grp_dct_1d_fu_373_dst_address0;
wire    grp_dct_1d_fu_373_dst_ce0;
wire    grp_dct_1d_fu_373_dst_we0;
wire   [15:0] grp_dct_1d_fu_373_dst_d0;
reg   [3:0] grp_dct_1d_fu_373_dst_offset;
reg   [3:0] i_0_reg_283;
wire    ap_CS_fsm_state3;
reg   [3:0] ap_phi_mux_j_0_phi_fu_310_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] i_2_reg_328;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state7;
reg   [3:0] ap_phi_mux_j_1_phi_fu_355_p4;
wire    ap_block_pp1_stage0;
reg    grp_dct_1d_fu_373_ap_start_reg;
wire   [63:0] zext_ln40_3_fu_498_p1;
wire   [63:0] zext_ln40_fu_503_p1;
wire   [63:0] zext_ln51_5_fu_592_p1;
wire   [63:0] zext_ln51_3_fu_617_p1;
wire   [0:0] icmp_ln39_fu_446_p2;
wire   [3:0] j_fu_440_p2;
wire   [6:0] tmp_fu_481_p3;
wire   [7:0] zext_ln40_2_fu_488_p1;
wire   [7:0] zext_ln40_1_fu_478_p1;
wire   [7:0] add_ln40_fu_492_p2;
wire   [0:0] icmp_ln50_fu_544_p2;
wire   [3:0] j_2_fu_538_p2;
wire   [6:0] tmp_2_fu_575_p3;
wire   [7:0] zext_ln51_fu_572_p1;
wire   [7:0] zext_ln51_4_fu_582_p1;
wire   [7:0] add_ln51_1_fu_586_p2;
wire   [6:0] tmp_1_fu_597_p3;
wire   [7:0] zext_ln51_2_fu_608_p1;
wire   [7:0] zext_ln51_1_fu_604_p1;
wire   [7:0] add_ln51_fu_611_p2;
wire    ap_CS_fsm_state14;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 grp_dct_1d_fu_373_ap_start_reg = 1'b0;
end

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
row_outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(row_outbuf_address0),
    .ce0(row_outbuf_ce0),
    .we0(row_outbuf_we0),
    .d0(grp_dct_1d_fu_373_dst_d0),
    .q0(row_outbuf_q0)
);

dct_2d_row_outbuf #(
    .DataWidth( 16 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
col_outbuf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_outbuf_address0),
    .ce0(col_outbuf_ce0),
    .we0(col_outbuf_we0),
    .d0(grp_dct_1d_fu_373_dst_d0),
    .q0(col_outbuf_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_0_address0),
    .ce0(col_inbuf_0_ce0),
    .we0(col_inbuf_0_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_0_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_1_address0),
    .ce0(col_inbuf_1_ce0),
    .we0(col_inbuf_1_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_1_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_2_address0),
    .ce0(col_inbuf_2_ce0),
    .we0(col_inbuf_2_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_2_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_3_address0),
    .ce0(col_inbuf_3_ce0),
    .we0(col_inbuf_3_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_3_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_4_address0),
    .ce0(col_inbuf_4_ce0),
    .we0(col_inbuf_4_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_4_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_5_address0),
    .ce0(col_inbuf_5_ce0),
    .we0(col_inbuf_5_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_5_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_6_address0),
    .ce0(col_inbuf_6_ce0),
    .we0(col_inbuf_6_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_6_q0)
);

dct_2d_col_inbuf_0 #(
    .DataWidth( 16 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
col_inbuf_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(col_inbuf_7_address0),
    .ce0(col_inbuf_7_ce0),
    .we0(col_inbuf_7_we0),
    .d0(row_outbuf_q0),
    .q0(col_inbuf_7_q0)
);

dct_1d grp_dct_1d_fu_373(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_dct_1d_fu_373_ap_start),
    .ap_done(grp_dct_1d_fu_373_ap_done),
    .ap_idle(grp_dct_1d_fu_373_ap_idle),
    .ap_ready(grp_dct_1d_fu_373_ap_ready),
    .src_address0(grp_dct_1d_fu_373_src_address0),
    .src_ce0(grp_dct_1d_fu_373_src_ce0),
    .src_q0(grp_dct_1d_fu_373_src_q0),
    .src1_address0(grp_dct_1d_fu_373_src1_address0),
    .src1_ce0(grp_dct_1d_fu_373_src1_ce0),
    .src1_q0(grp_dct_1d_fu_373_src1_q0),
    .src2_address0(grp_dct_1d_fu_373_src2_address0),
    .src2_ce0(grp_dct_1d_fu_373_src2_ce0),
    .src2_q0(grp_dct_1d_fu_373_src2_q0),
    .src3_address0(grp_dct_1d_fu_373_src3_address0),
    .src3_ce0(grp_dct_1d_fu_373_src3_ce0),
    .src3_q0(grp_dct_1d_fu_373_src3_q0),
    .src4_address0(grp_dct_1d_fu_373_src4_address0),
    .src4_ce0(grp_dct_1d_fu_373_src4_ce0),
    .src4_q0(grp_dct_1d_fu_373_src4_q0),
    .src5_address0(grp_dct_1d_fu_373_src5_address0),
    .src5_ce0(grp_dct_1d_fu_373_src5_ce0),
    .src5_q0(grp_dct_1d_fu_373_src5_q0),
    .src6_address0(grp_dct_1d_fu_373_src6_address0),
    .src6_ce0(grp_dct_1d_fu_373_src6_ce0),
    .src6_q0(grp_dct_1d_fu_373_src6_q0),
    .src7_address0(grp_dct_1d_fu_373_src7_address0),
    .src7_ce0(grp_dct_1d_fu_373_src7_ce0),
    .src7_q0(grp_dct_1d_fu_373_src7_q0),
    .src_offset(grp_dct_1d_fu_373_src_offset),
    .dst_address0(grp_dct_1d_fu_373_dst_address0),
    .dst_ce0(grp_dct_1d_fu_373_dst_ce0),
    .dst_we0(grp_dct_1d_fu_373_dst_we0),
    .dst_d0(grp_dct_1d_fu_373_dst_d0),
    .dst_offset(grp_dct_1d_fu_373_dst_offset)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state4)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state4);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state10)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end else if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_dct_1d_fu_373_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd0)) | ((icmp_ln32_fu_416_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)))) begin
            grp_dct_1d_fu_373_ap_start_reg <= 1'b1;
        end else if ((grp_dct_1d_fu_373_ap_ready == 1'b1)) begin
            grp_dct_1d_fu_373_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_dct_1d_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_283 <= i_reg_626;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_0_reg_283 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_317 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_428_p2 == 1'd0))) begin
        i_1_reg_317 <= i_5_fu_472_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_2_reg_328 <= 4'd0;
    end else if (((grp_dct_1d_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        i_2_reg_328 <= i_4_reg_670;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
        i_3_reg_362 <= 4'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_fu_526_p2 == 1'd0))) begin
        i_3_reg_362 <= i_6_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
        indvar_flatten19_reg_340 <= 7'd0;
    end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_fu_526_p2 == 1'd0))) begin
        indvar_flatten19_reg_340 <= add_ln48_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_reg_295 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_428_p2 == 1'd0))) begin
        indvar_flatten_reg_295 <= add_ln37_fu_434_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_306 <= 4'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_reg_631 == 1'd0))) begin
        j_0_reg_306 <= select_ln40_1_reg_645;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
        j_1_reg_351 <= 4'd0;
    end else if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_reg_675 == 1'd0))) begin
        j_1_reg_351 <= select_ln51_1_reg_690;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_reg_675_pp1_iter1_reg == 1'd0))) begin
        col_outbuf_load_reg_707 <= col_outbuf_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_4_reg_670 <= i_4_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_626 <= i_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln37_reg_631 <= icmp_ln37_fu_428_p2;
        select_ln40_1_reg_645_pp0_iter1_reg <= select_ln40_1_reg_645;
        trunc_ln40_reg_652_pp0_iter1_reg <= trunc_ln40_reg_652;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln48_reg_675 <= icmp_ln48_fu_526_p2;
        icmp_ln48_reg_675_pp1_iter1_reg <= icmp_ln48_reg_675;
        select_ln51_1_reg_690_pp1_iter1_reg <= select_ln51_1_reg_690;
        select_ln51_reg_684_pp1_iter1_reg <= select_ln51_reg_684;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln48_reg_675_pp1_iter2_reg <= icmp_ln48_reg_675_pp1_iter1_reg;
        select_ln51_1_reg_690_pp1_iter2_reg <= select_ln51_1_reg_690_pp1_iter1_reg;
        select_ln51_reg_684_pp1_iter2_reg <= select_ln51_reg_684_pp1_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_428_p2 == 1'd0))) begin
        select_ln40_1_reg_645 <= select_ln40_1_fu_460_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln37_fu_428_p2 == 1'd0))) begin
        select_ln40_reg_640 <= select_ln40_fu_452_p3;
        trunc_ln40_reg_652 <= trunc_ln40_fu_468_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_fu_526_p2 == 1'd0))) begin
        select_ln51_1_reg_690 <= select_ln51_1_fu_558_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_fu_526_p2 == 1'd0))) begin
        select_ln51_reg_684 <= select_ln51_fu_550_p3;
    end
end

always @ (*) begin
    if ((icmp_ln37_fu_428_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln48_fu_526_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln37_reg_631 == 1'd0))) begin
        ap_phi_mux_j_0_phi_fu_310_p4 = select_ln40_1_reg_645;
    end else begin
        ap_phi_mux_j_0_phi_fu_310_p4 = j_0_reg_306;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln48_reg_675 == 1'd0))) begin
        ap_phi_mux_j_1_phi_fu_355_p4 = select_ln51_1_reg_690;
    end else begin
        ap_phi_mux_j_1_phi_fu_355_p4 = j_1_reg_351;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_0_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_0_address0 = grp_dct_1d_fu_373_src_address0;
    end else begin
        col_inbuf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_0_ce0 = grp_dct_1d_fu_373_src_ce0;
    end else begin
        col_inbuf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_0_we0 = 1'b1;
    end else begin
        col_inbuf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_1_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_1_address0 = grp_dct_1d_fu_373_src1_address0;
    end else begin
        col_inbuf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_1_ce0 = grp_dct_1d_fu_373_src1_ce0;
    end else begin
        col_inbuf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_1_we0 = 1'b1;
    end else begin
        col_inbuf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_2_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_2_address0 = grp_dct_1d_fu_373_src2_address0;
    end else begin
        col_inbuf_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_2_ce0 = grp_dct_1d_fu_373_src2_ce0;
    end else begin
        col_inbuf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_2_we0 = 1'b1;
    end else begin
        col_inbuf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_3_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_3_address0 = grp_dct_1d_fu_373_src3_address0;
    end else begin
        col_inbuf_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_3_ce0 = grp_dct_1d_fu_373_src3_ce0;
    end else begin
        col_inbuf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_3_we0 = 1'b1;
    end else begin
        col_inbuf_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_4_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_4_address0 = grp_dct_1d_fu_373_src4_address0;
    end else begin
        col_inbuf_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_4_ce0 = grp_dct_1d_fu_373_src4_ce0;
    end else begin
        col_inbuf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_4_we0 = 1'b1;
    end else begin
        col_inbuf_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_5_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_5_address0 = grp_dct_1d_fu_373_src5_address0;
    end else begin
        col_inbuf_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_5_ce0 = grp_dct_1d_fu_373_src5_ce0;
    end else begin
        col_inbuf_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_5_we0 = 1'b1;
    end else begin
        col_inbuf_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_6_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_6_address0 = grp_dct_1d_fu_373_src6_address0;
    end else begin
        col_inbuf_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_6_ce0 = grp_dct_1d_fu_373_src6_ce0;
    end else begin
        col_inbuf_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_6_we0 = 1'b1;
    end else begin
        col_inbuf_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        col_inbuf_7_address0 = zext_ln40_fu_503_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_7_address0 = grp_dct_1d_fu_373_src7_address0;
    end else begin
        col_inbuf_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_inbuf_7_ce0 = grp_dct_1d_fu_373_src7_ce0;
    end else begin
        col_inbuf_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln40_reg_652_pp0_iter1_reg == 3'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_inbuf_7_we0 = 1'b1;
    end else begin
        col_inbuf_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        col_outbuf_address0 = zext_ln51_5_fu_592_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_address0 = grp_dct_1d_fu_373_dst_address0;
    end else begin
        col_outbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        col_outbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_ce0 = grp_dct_1d_fu_373_dst_ce0;
    end else begin
        col_outbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        col_outbuf_we0 = grp_dct_1d_fu_373_dst_we0;
    end else begin
        col_outbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_dst_offset = i_2_reg_328;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_dst_offset = i_0_reg_283;
    end else begin
        grp_dct_1d_fu_373_dst_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src1_q0 = col_inbuf_1_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src1_q0 = in_block_1_q0;
    end else begin
        grp_dct_1d_fu_373_src1_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src2_q0 = col_inbuf_2_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src2_q0 = in_block_2_q0;
    end else begin
        grp_dct_1d_fu_373_src2_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src3_q0 = col_inbuf_3_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src3_q0 = in_block_3_q0;
    end else begin
        grp_dct_1d_fu_373_src3_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src4_q0 = col_inbuf_4_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src4_q0 = in_block_4_q0;
    end else begin
        grp_dct_1d_fu_373_src4_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src5_q0 = col_inbuf_5_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src5_q0 = in_block_5_q0;
    end else begin
        grp_dct_1d_fu_373_src5_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src6_q0 = col_inbuf_6_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src6_q0 = in_block_6_q0;
    end else begin
        grp_dct_1d_fu_373_src6_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src7_q0 = col_inbuf_7_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src7_q0 = in_block_7_q0;
    end else begin
        grp_dct_1d_fu_373_src7_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src_offset = i_2_reg_328;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src_offset = i_0_reg_283;
    end else begin
        grp_dct_1d_fu_373_src_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_dct_1d_fu_373_src_q0 = col_inbuf_0_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_dct_1d_fu_373_src_q0 = in_block_0_q0;
    end else begin
        grp_dct_1d_fu_373_src_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_0_ce0 = grp_dct_1d_fu_373_src_ce0;
    end else begin
        in_block_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_1_ce0 = grp_dct_1d_fu_373_src1_ce0;
    end else begin
        in_block_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_2_ce0 = grp_dct_1d_fu_373_src2_ce0;
    end else begin
        in_block_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_3_ce0 = grp_dct_1d_fu_373_src3_ce0;
    end else begin
        in_block_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_4_ce0 = grp_dct_1d_fu_373_src4_ce0;
    end else begin
        in_block_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_5_ce0 = grp_dct_1d_fu_373_src5_ce0;
    end else begin
        in_block_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_6_ce0 = grp_dct_1d_fu_373_src6_ce0;
    end else begin
        in_block_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        in_block_7_ce0 = grp_dct_1d_fu_373_src7_ce0;
    end else begin
        in_block_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        out_block_ce0 = 1'b1;
    end else begin
        out_block_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln48_reg_675_pp1_iter2_reg == 1'd0))) begin
        out_block_we0 = 1'b1;
    end else begin
        out_block_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        row_outbuf_address0 = zext_ln40_3_fu_498_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_address0 = grp_dct_1d_fu_373_dst_address0;
    end else begin
        row_outbuf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_outbuf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_ce0 = grp_dct_1d_fu_373_dst_ce0;
    end else begin
        row_outbuf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        row_outbuf_we0 = grp_dct_1d_fu_373_dst_we0;
    end else begin
        row_outbuf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_416_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_dct_1d_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln37_fu_428_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln37_fu_428_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln43_fu_514_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((grp_dct_1d_fu_373_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln48_fu_526_p2 == 1'd1)) & ~((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter2 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln48_fu_526_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln37_fu_434_p2 = (indvar_flatten_reg_295 + 7'd1);

assign add_ln40_fu_492_p2 = (zext_ln40_2_fu_488_p1 + zext_ln40_1_fu_478_p1);

assign add_ln48_fu_532_p2 = (indvar_flatten19_reg_340 + 7'd1);

assign add_ln51_1_fu_586_p2 = (zext_ln51_fu_572_p1 + zext_ln51_4_fu_582_p1);

assign add_ln51_fu_611_p2 = (zext_ln51_2_fu_608_p1 + zext_ln51_1_fu_604_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign grp_dct_1d_fu_373_ap_start = grp_dct_1d_fu_373_ap_start_reg;

assign i_4_fu_520_p2 = (i_2_reg_328 + 4'd1);

assign i_5_fu_472_p2 = (select_ln40_fu_452_p3 + 4'd1);

assign i_6_fu_566_p2 = (select_ln51_fu_550_p3 + 4'd1);

assign i_fu_422_p2 = (i_0_reg_283 + 4'd1);

assign icmp_ln32_fu_416_p2 = ((i_0_reg_283 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_428_p2 = ((indvar_flatten_reg_295 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln39_fu_446_p2 = ((i_1_reg_317 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_514_p2 = ((i_2_reg_328 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_526_p2 = ((indvar_flatten19_reg_340 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_544_p2 = ((i_3_reg_362 == 4'd8) ? 1'b1 : 1'b0);

assign in_block_0_address0 = grp_dct_1d_fu_373_src_address0;

assign in_block_1_address0 = grp_dct_1d_fu_373_src1_address0;

assign in_block_2_address0 = grp_dct_1d_fu_373_src2_address0;

assign in_block_3_address0 = grp_dct_1d_fu_373_src3_address0;

assign in_block_4_address0 = grp_dct_1d_fu_373_src4_address0;

assign in_block_5_address0 = grp_dct_1d_fu_373_src5_address0;

assign in_block_6_address0 = grp_dct_1d_fu_373_src6_address0;

assign in_block_7_address0 = grp_dct_1d_fu_373_src7_address0;

assign j_2_fu_538_p2 = (ap_phi_mux_j_1_phi_fu_355_p4 + 4'd1);

assign j_fu_440_p2 = (4'd1 + ap_phi_mux_j_0_phi_fu_310_p4);

assign out_block_address0 = zext_ln51_3_fu_617_p1;

assign out_block_d0 = col_outbuf_load_reg_707;

assign select_ln40_1_fu_460_p3 = ((icmp_ln39_fu_446_p2[0:0] === 1'b1) ? j_fu_440_p2 : ap_phi_mux_j_0_phi_fu_310_p4);

assign select_ln40_fu_452_p3 = ((icmp_ln39_fu_446_p2[0:0] === 1'b1) ? 4'd0 : i_1_reg_317);

assign select_ln51_1_fu_558_p3 = ((icmp_ln50_fu_544_p2[0:0] === 1'b1) ? j_2_fu_538_p2 : ap_phi_mux_j_1_phi_fu_355_p4);

assign select_ln51_fu_550_p3 = ((icmp_ln50_fu_544_p2[0:0] === 1'b1) ? 4'd0 : i_3_reg_362);

assign tmp_1_fu_597_p3 = {{select_ln51_1_reg_690_pp1_iter2_reg}, {3'd0}};

assign tmp_2_fu_575_p3 = {{select_ln51_reg_684}, {3'd0}};

assign tmp_fu_481_p3 = {{select_ln40_reg_640}, {3'd0}};

assign trunc_ln40_fu_468_p1 = select_ln40_fu_452_p3[2:0];

assign zext_ln40_1_fu_478_p1 = select_ln40_1_reg_645;

assign zext_ln40_2_fu_488_p1 = tmp_fu_481_p3;

assign zext_ln40_3_fu_498_p1 = add_ln40_fu_492_p2;

assign zext_ln40_fu_503_p1 = select_ln40_1_reg_645_pp0_iter1_reg;

assign zext_ln51_1_fu_604_p1 = tmp_1_fu_597_p3;

assign zext_ln51_2_fu_608_p1 = select_ln51_reg_684_pp1_iter2_reg;

assign zext_ln51_3_fu_617_p1 = add_ln51_fu_611_p2;

assign zext_ln51_4_fu_582_p1 = tmp_2_fu_575_p3;

assign zext_ln51_5_fu_592_p1 = add_ln51_1_fu_586_p2;

assign zext_ln51_fu_572_p1 = select_ln51_1_reg_690;

endmodule //dct_2d
