-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2019.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity dct_2d is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_block_0_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_0_ce0 : OUT STD_LOGIC;
    in_block_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_1_ce0 : OUT STD_LOGIC;
    in_block_1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_2_ce0 : OUT STD_LOGIC;
    in_block_2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_3_ce0 : OUT STD_LOGIC;
    in_block_3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_4_ce0 : OUT STD_LOGIC;
    in_block_4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_5_ce0 : OUT STD_LOGIC;
    in_block_5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_6_ce0 : OUT STD_LOGIC;
    in_block_6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    in_block_7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    in_block_7_ce0 : OUT STD_LOGIC;
    in_block_7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    out_block_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    out_block_ce0 : OUT STD_LOGIC;
    out_block_we0 : OUT STD_LOGIC;
    out_block_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of dct_2d is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal indvar_flatten_reg_295 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_0_reg_306 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_1_reg_317 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten19_reg_340 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_1_reg_351 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_362 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln32_fu_416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal i_fu_422_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_626 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln37_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln37_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln37_fu_434_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln40_fu_452_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_reg_640 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_1_fu_460_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_1_reg_645 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_1_reg_645_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln40_fu_468_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln40_reg_652 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln40_reg_652_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal i_5_fu_472_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln43_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i_4_fu_520_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_670 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln48_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_reg_675 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state10_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal icmp_ln48_reg_675_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_reg_675_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln48_fu_532_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal select_ln51_fu_550_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_reg_684 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_reg_684_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_reg_684_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_1_fu_558_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_1_reg_690 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_1_reg_690_pp1_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln51_1_reg_690_pp1_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_6_fu_566_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal col_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_load_reg_707 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal row_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal row_outbuf_ce0 : STD_LOGIC;
    signal row_outbuf_we0 : STD_LOGIC;
    signal row_outbuf_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_outbuf_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal col_outbuf_ce0 : STD_LOGIC;
    signal col_outbuf_we0 : STD_LOGIC;
    signal col_inbuf_0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_0_ce0 : STD_LOGIC;
    signal col_inbuf_0_we0 : STD_LOGIC;
    signal col_inbuf_0_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_1_ce0 : STD_LOGIC;
    signal col_inbuf_1_we0 : STD_LOGIC;
    signal col_inbuf_1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_2_ce0 : STD_LOGIC;
    signal col_inbuf_2_we0 : STD_LOGIC;
    signal col_inbuf_2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_3_ce0 : STD_LOGIC;
    signal col_inbuf_3_we0 : STD_LOGIC;
    signal col_inbuf_3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_4_ce0 : STD_LOGIC;
    signal col_inbuf_4_we0 : STD_LOGIC;
    signal col_inbuf_4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_5_ce0 : STD_LOGIC;
    signal col_inbuf_5_we0 : STD_LOGIC;
    signal col_inbuf_5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_6_ce0 : STD_LOGIC;
    signal col_inbuf_6_we0 : STD_LOGIC;
    signal col_inbuf_6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal col_inbuf_7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal col_inbuf_7_ce0 : STD_LOGIC;
    signal col_inbuf_7_we0 : STD_LOGIC;
    signal col_inbuf_7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_ap_start : STD_LOGIC;
    signal grp_dct_1d_fu_373_ap_done : STD_LOGIC;
    signal grp_dct_1d_fu_373_ap_idle : STD_LOGIC;
    signal grp_dct_1d_fu_373_ap_ready : STD_LOGIC;
    signal grp_dct_1d_fu_373_src_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src1_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src1_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src2_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src2_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src2_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src3_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src3_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src3_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src4_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src4_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src5_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src5_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src6_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src6_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src6_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src7_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_dct_1d_fu_373_src7_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_src7_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_src_offset : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_dct_1d_fu_373_dst_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_dct_1d_fu_373_dst_ce0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_dst_we0 : STD_LOGIC;
    signal grp_dct_1d_fu_373_dst_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_dct_1d_fu_373_dst_offset : STD_LOGIC_VECTOR (3 downto 0);
    signal i_0_reg_283 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_phi_mux_j_0_phi_fu_310_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_2_reg_328 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_phi_mux_j_1_phi_fu_355_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal grp_dct_1d_fu_373_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln40_3_fu_498_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_fu_503_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_5_fu_592_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln51_3_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln39_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_440_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_481_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln40_2_fu_488_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln40_1_fu_478_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln40_fu_492_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln50_fu_544_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_2_fu_538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_575_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln51_fu_572_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_4_fu_582_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln51_1_fu_586_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_fu_597_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln51_2_fu_608_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln51_1_fu_604_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln51_fu_611_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component dct_1d IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src_ce0 : OUT STD_LOGIC;
        src_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src1_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src1_ce0 : OUT STD_LOGIC;
        src1_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src2_ce0 : OUT STD_LOGIC;
        src2_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src3_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src3_ce0 : OUT STD_LOGIC;
        src3_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src4_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src4_ce0 : OUT STD_LOGIC;
        src4_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src5_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src5_ce0 : OUT STD_LOGIC;
        src5_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src6_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src6_ce0 : OUT STD_LOGIC;
        src6_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src7_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        src7_ce0 : OUT STD_LOGIC;
        src7_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        src_offset : IN STD_LOGIC_VECTOR (3 downto 0);
        dst_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dst_ce0 : OUT STD_LOGIC;
        dst_we0 : OUT STD_LOGIC;
        dst_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        dst_offset : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component dct_2d_row_outbuf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component dct_2d_col_inbuf_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    row_outbuf_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => row_outbuf_address0,
        ce0 => row_outbuf_ce0,
        we0 => row_outbuf_we0,
        d0 => grp_dct_1d_fu_373_dst_d0,
        q0 => row_outbuf_q0);

    col_outbuf_U : component dct_2d_row_outbuf
    generic map (
        DataWidth => 16,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_outbuf_address0,
        ce0 => col_outbuf_ce0,
        we0 => col_outbuf_we0,
        d0 => grp_dct_1d_fu_373_dst_d0,
        q0 => col_outbuf_q0);

    col_inbuf_0_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_0_address0,
        ce0 => col_inbuf_0_ce0,
        we0 => col_inbuf_0_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_0_q0);

    col_inbuf_1_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_1_address0,
        ce0 => col_inbuf_1_ce0,
        we0 => col_inbuf_1_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_1_q0);

    col_inbuf_2_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_2_address0,
        ce0 => col_inbuf_2_ce0,
        we0 => col_inbuf_2_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_2_q0);

    col_inbuf_3_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_3_address0,
        ce0 => col_inbuf_3_ce0,
        we0 => col_inbuf_3_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_3_q0);

    col_inbuf_4_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_4_address0,
        ce0 => col_inbuf_4_ce0,
        we0 => col_inbuf_4_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_4_q0);

    col_inbuf_5_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_5_address0,
        ce0 => col_inbuf_5_ce0,
        we0 => col_inbuf_5_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_5_q0);

    col_inbuf_6_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_6_address0,
        ce0 => col_inbuf_6_ce0,
        we0 => col_inbuf_6_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_6_q0);

    col_inbuf_7_U : component dct_2d_col_inbuf_0
    generic map (
        DataWidth => 16,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => col_inbuf_7_address0,
        ce0 => col_inbuf_7_ce0,
        we0 => col_inbuf_7_we0,
        d0 => row_outbuf_q0,
        q0 => col_inbuf_7_q0);

    grp_dct_1d_fu_373 : component dct_1d
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_dct_1d_fu_373_ap_start,
        ap_done => grp_dct_1d_fu_373_ap_done,
        ap_idle => grp_dct_1d_fu_373_ap_idle,
        ap_ready => grp_dct_1d_fu_373_ap_ready,
        src_address0 => grp_dct_1d_fu_373_src_address0,
        src_ce0 => grp_dct_1d_fu_373_src_ce0,
        src_q0 => grp_dct_1d_fu_373_src_q0,
        src1_address0 => grp_dct_1d_fu_373_src1_address0,
        src1_ce0 => grp_dct_1d_fu_373_src1_ce0,
        src1_q0 => grp_dct_1d_fu_373_src1_q0,
        src2_address0 => grp_dct_1d_fu_373_src2_address0,
        src2_ce0 => grp_dct_1d_fu_373_src2_ce0,
        src2_q0 => grp_dct_1d_fu_373_src2_q0,
        src3_address0 => grp_dct_1d_fu_373_src3_address0,
        src3_ce0 => grp_dct_1d_fu_373_src3_ce0,
        src3_q0 => grp_dct_1d_fu_373_src3_q0,
        src4_address0 => grp_dct_1d_fu_373_src4_address0,
        src4_ce0 => grp_dct_1d_fu_373_src4_ce0,
        src4_q0 => grp_dct_1d_fu_373_src4_q0,
        src5_address0 => grp_dct_1d_fu_373_src5_address0,
        src5_ce0 => grp_dct_1d_fu_373_src5_ce0,
        src5_q0 => grp_dct_1d_fu_373_src5_q0,
        src6_address0 => grp_dct_1d_fu_373_src6_address0,
        src6_ce0 => grp_dct_1d_fu_373_src6_ce0,
        src6_q0 => grp_dct_1d_fu_373_src6_q0,
        src7_address0 => grp_dct_1d_fu_373_src7_address0,
        src7_ce0 => grp_dct_1d_fu_373_src7_ce0,
        src7_q0 => grp_dct_1d_fu_373_src7_q0,
        src_offset => grp_dct_1d_fu_373_src_offset,
        dst_address0 => grp_dct_1d_fu_373_dst_address0,
        dst_ce0 => grp_dct_1d_fu_373_dst_ce0,
        dst_we0 => grp_dct_1d_fu_373_dst_we0,
        dst_d0 => grp_dct_1d_fu_373_dst_d0,
        dst_offset => grp_dct_1d_fu_373_dst_offset);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state10)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_dct_1d_fu_373_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_dct_1d_fu_373_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_0)) or ((icmp_ln32_fu_416_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_dct_1d_fu_373_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_dct_1d_fu_373_ap_ready = ap_const_logic_1)) then 
                    grp_dct_1d_fu_373_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_283_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_dct_1d_fu_373_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_283 <= i_reg_626;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_0_reg_283 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_reg_317_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_reg_317 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_fu_428_p2 = ap_const_lv1_0))) then 
                i_1_reg_317 <= i_5_fu_472_p2;
            end if; 
        end if;
    end process;

    i_2_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i_2_reg_328 <= ap_const_lv4_0;
            elsif (((grp_dct_1d_fu_373_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_2_reg_328 <= i_4_reg_670;
            end if; 
        end if;
    end process;

    i_3_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then 
                i_3_reg_362 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_fu_526_p2 = ap_const_lv1_0))) then 
                i_3_reg_362 <= i_6_fu_566_p2;
            end if; 
        end if;
    end process;

    indvar_flatten19_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then 
                indvar_flatten19_reg_340 <= ap_const_lv7_0;
            elsif (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_fu_526_p2 = ap_const_lv1_0))) then 
                indvar_flatten19_reg_340 <= add_ln48_fu_532_p2;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                indvar_flatten_reg_295 <= ap_const_lv7_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_fu_428_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_295 <= add_ln37_fu_434_p2;
            end if; 
        end if;
    end process;

    j_0_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_306 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_reg_631 = ap_const_lv1_0))) then 
                j_0_reg_306 <= select_ln40_1_reg_645;
            end if; 
        end if;
    end process;

    j_1_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then 
                j_1_reg_351 <= ap_const_lv4_0;
            elsif (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_reg_675 = ap_const_lv1_0))) then 
                j_1_reg_351 <= select_ln51_1_reg_690;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_reg_675_pp1_iter1_reg = ap_const_lv1_0))) then
                col_outbuf_load_reg_707 <= col_outbuf_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_4_reg_670 <= i_4_fu_520_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_626 <= i_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln37_reg_631 <= icmp_ln37_fu_428_p2;
                select_ln40_1_reg_645_pp0_iter1_reg <= select_ln40_1_reg_645;
                trunc_ln40_reg_652_pp0_iter1_reg <= trunc_ln40_reg_652;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln48_reg_675 <= icmp_ln48_fu_526_p2;
                icmp_ln48_reg_675_pp1_iter1_reg <= icmp_ln48_reg_675;
                select_ln51_1_reg_690_pp1_iter1_reg <= select_ln51_1_reg_690;
                select_ln51_reg_684_pp1_iter1_reg <= select_ln51_reg_684;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln48_reg_675_pp1_iter2_reg <= icmp_ln48_reg_675_pp1_iter1_reg;
                select_ln51_1_reg_690_pp1_iter2_reg <= select_ln51_1_reg_690_pp1_iter1_reg;
                select_ln51_reg_684_pp1_iter2_reg <= select_ln51_reg_684_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_fu_428_p2 = ap_const_lv1_0))) then
                select_ln40_1_reg_645 <= select_ln40_1_fu_460_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln37_fu_428_p2 = ap_const_lv1_0))) then
                select_ln40_reg_640 <= select_ln40_fu_452_p3;
                trunc_ln40_reg_652 <= trunc_ln40_fu_468_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_fu_526_p2 = ap_const_lv1_0))) then
                select_ln51_1_reg_690 <= select_ln51_1_fu_558_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_fu_526_p2 = ap_const_lv1_0))) then
                select_ln51_reg_684 <= select_ln51_fu_550_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln32_fu_416_p2, ap_CS_fsm_state2, icmp_ln37_fu_428_p2, ap_enable_reg_pp0_iter0, icmp_ln43_fu_514_p2, ap_CS_fsm_state8, icmp_ln48_fu_526_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, grp_dct_1d_fu_373_ap_done, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_416_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((grp_dct_1d_fu_373_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln37_fu_428_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln37_fu_428_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln43_fu_514_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                if (((grp_dct_1d_fu_373_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln48_fu_526_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln48_fu_526_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln37_fu_434_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_295) + unsigned(ap_const_lv7_1));
    add_ln40_fu_492_p2 <= std_logic_vector(unsigned(zext_ln40_2_fu_488_p1) + unsigned(zext_ln40_1_fu_478_p1));
    add_ln48_fu_532_p2 <= std_logic_vector(unsigned(indvar_flatten19_reg_340) + unsigned(ap_const_lv7_1));
    add_ln51_1_fu_586_p2 <= std_logic_vector(unsigned(zext_ln51_fu_572_p1) + unsigned(zext_ln51_4_fu_582_p1));
    add_ln51_fu_611_p2 <= std_logic_vector(unsigned(zext_ln51_2_fu_608_p1) + unsigned(zext_ln51_1_fu_604_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(8);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state7 <= ap_CS_fsm(4);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
    ap_CS_fsm_state9 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln37_fu_428_p2)
    begin
        if ((icmp_ln37_fu_428_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state10_assign_proc : process(icmp_ln48_fu_526_p2)
    begin
        if ((icmp_ln48_fu_526_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_j_0_phi_fu_310_p4_assign_proc : process(j_0_reg_306, icmp_ln37_reg_631, ap_CS_fsm_pp0_stage0, select_ln40_1_reg_645, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln37_reg_631 = ap_const_lv1_0))) then 
            ap_phi_mux_j_0_phi_fu_310_p4 <= select_ln40_1_reg_645;
        else 
            ap_phi_mux_j_0_phi_fu_310_p4 <= j_0_reg_306;
        end if; 
    end process;


    ap_phi_mux_j_1_phi_fu_355_p4_assign_proc : process(j_1_reg_351, icmp_ln48_reg_675, ap_CS_fsm_pp1_stage0, select_ln51_1_reg_690, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln48_reg_675 = ap_const_lv1_0))) then 
            ap_phi_mux_j_1_phi_fu_355_p4 <= select_ln51_1_reg_690;
        else 
            ap_phi_mux_j_1_phi_fu_355_p4 <= j_1_reg_351;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_0_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_0_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_0_address0 <= grp_dct_1d_fu_373_src_address0;
        else 
            col_inbuf_0_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_0_ce0 <= grp_dct_1d_fu_373_src_ce0;
        else 
            col_inbuf_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_0_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_0_we0 <= ap_const_logic_1;
        else 
            col_inbuf_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_1_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src1_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_1_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_1_address0 <= grp_dct_1d_fu_373_src1_address0;
        else 
            col_inbuf_1_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_1_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src1_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_1_ce0 <= grp_dct_1d_fu_373_src1_ce0;
        else 
            col_inbuf_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_1_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_1_we0 <= ap_const_logic_1;
        else 
            col_inbuf_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_2_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src2_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_2_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_2_address0 <= grp_dct_1d_fu_373_src2_address0;
        else 
            col_inbuf_2_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_2_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src2_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_2_ce0 <= grp_dct_1d_fu_373_src2_ce0;
        else 
            col_inbuf_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_2_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_2_we0 <= ap_const_logic_1;
        else 
            col_inbuf_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_3_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src3_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_3_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_3_address0 <= grp_dct_1d_fu_373_src3_address0;
        else 
            col_inbuf_3_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_3_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src3_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_3_ce0 <= grp_dct_1d_fu_373_src3_ce0;
        else 
            col_inbuf_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_3_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_3_we0 <= ap_const_logic_1;
        else 
            col_inbuf_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_4_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src4_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_4_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_4_address0 <= grp_dct_1d_fu_373_src4_address0;
        else 
            col_inbuf_4_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_4_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src4_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_4_ce0 <= grp_dct_1d_fu_373_src4_ce0;
        else 
            col_inbuf_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_4_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_4_we0 <= ap_const_logic_1;
        else 
            col_inbuf_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_5_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src5_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_5_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_5_address0 <= grp_dct_1d_fu_373_src5_address0;
        else 
            col_inbuf_5_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_5_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src5_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_5_ce0 <= grp_dct_1d_fu_373_src5_ce0;
        else 
            col_inbuf_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_5_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_5_we0 <= ap_const_logic_1;
        else 
            col_inbuf_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_6_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src6_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_6_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_6_address0 <= grp_dct_1d_fu_373_src6_address0;
        else 
            col_inbuf_6_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_6_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src6_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_6_ce0 <= grp_dct_1d_fu_373_src6_ce0;
        else 
            col_inbuf_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_6_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_6_we0 <= ap_const_logic_1;
        else 
            col_inbuf_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_7_address0_assign_proc : process(ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src7_address0, ap_block_pp0_stage0, ap_CS_fsm_state9, zext_ln40_fu_503_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            col_inbuf_7_address0 <= zext_ln40_fu_503_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_7_address0 <= grp_dct_1d_fu_373_src7_address0;
        else 
            col_inbuf_7_address0 <= "XXX";
        end if; 
    end process;


    col_inbuf_7_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, grp_dct_1d_fu_373_src7_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_inbuf_7_ce0 <= grp_dct_1d_fu_373_src7_ce0;
        else 
            col_inbuf_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_inbuf_7_we0_assign_proc : process(ap_block_pp0_stage0_11001, trunc_ln40_reg_652_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (trunc_ln40_reg_652_pp0_iter1_reg = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            col_inbuf_7_we0 <= ap_const_logic_1;
        else 
            col_inbuf_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, grp_dct_1d_fu_373_dst_address0, ap_CS_fsm_state9, ap_block_pp1_stage0, zext_ln51_5_fu_592_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            col_outbuf_address0 <= zext_ln51_5_fu_592_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_outbuf_address0 <= grp_dct_1d_fu_373_dst_address0;
        else 
            col_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    col_outbuf_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter1, grp_dct_1d_fu_373_dst_ce0, ap_CS_fsm_state9)
    begin
        if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            col_outbuf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_outbuf_ce0 <= grp_dct_1d_fu_373_dst_ce0;
        else 
            col_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    col_outbuf_we0_assign_proc : process(grp_dct_1d_fu_373_dst_we0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            col_outbuf_we0 <= grp_dct_1d_fu_373_dst_we0;
        else 
            col_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_dct_1d_fu_373_ap_start <= grp_dct_1d_fu_373_ap_start_reg;

    grp_dct_1d_fu_373_dst_offset_assign_proc : process(i_0_reg_283, ap_CS_fsm_state3, i_2_reg_328, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_dst_offset <= i_2_reg_328;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_dst_offset <= i_0_reg_283;
        else 
            grp_dct_1d_fu_373_dst_offset <= "XXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src1_q0_assign_proc : process(in_block_1_q0, col_inbuf_1_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src1_q0 <= col_inbuf_1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src1_q0 <= in_block_1_q0;
        else 
            grp_dct_1d_fu_373_src1_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src2_q0_assign_proc : process(in_block_2_q0, col_inbuf_2_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src2_q0 <= col_inbuf_2_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src2_q0 <= in_block_2_q0;
        else 
            grp_dct_1d_fu_373_src2_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src3_q0_assign_proc : process(in_block_3_q0, col_inbuf_3_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src3_q0 <= col_inbuf_3_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src3_q0 <= in_block_3_q0;
        else 
            grp_dct_1d_fu_373_src3_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src4_q0_assign_proc : process(in_block_4_q0, col_inbuf_4_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src4_q0 <= col_inbuf_4_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src4_q0 <= in_block_4_q0;
        else 
            grp_dct_1d_fu_373_src4_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src5_q0_assign_proc : process(in_block_5_q0, col_inbuf_5_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src5_q0 <= col_inbuf_5_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src5_q0 <= in_block_5_q0;
        else 
            grp_dct_1d_fu_373_src5_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src6_q0_assign_proc : process(in_block_6_q0, col_inbuf_6_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src6_q0 <= col_inbuf_6_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src6_q0 <= in_block_6_q0;
        else 
            grp_dct_1d_fu_373_src6_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src7_q0_assign_proc : process(in_block_7_q0, col_inbuf_7_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src7_q0 <= col_inbuf_7_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src7_q0 <= in_block_7_q0;
        else 
            grp_dct_1d_fu_373_src7_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src_offset_assign_proc : process(i_0_reg_283, ap_CS_fsm_state3, i_2_reg_328, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src_offset <= i_2_reg_328;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src_offset <= i_0_reg_283;
        else 
            grp_dct_1d_fu_373_src_offset <= "XXXX";
        end if; 
    end process;


    grp_dct_1d_fu_373_src_q0_assign_proc : process(in_block_0_q0, col_inbuf_0_q0, ap_CS_fsm_state3, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_dct_1d_fu_373_src_q0 <= col_inbuf_0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_dct_1d_fu_373_src_q0 <= in_block_0_q0;
        else 
            grp_dct_1d_fu_373_src_q0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_4_fu_520_p2 <= std_logic_vector(unsigned(i_2_reg_328) + unsigned(ap_const_lv4_1));
    i_5_fu_472_p2 <= std_logic_vector(unsigned(select_ln40_fu_452_p3) + unsigned(ap_const_lv4_1));
    i_6_fu_566_p2 <= std_logic_vector(unsigned(select_ln51_fu_550_p3) + unsigned(ap_const_lv4_1));
    i_fu_422_p2 <= std_logic_vector(unsigned(i_0_reg_283) + unsigned(ap_const_lv4_1));
    icmp_ln32_fu_416_p2 <= "1" when (i_0_reg_283 = ap_const_lv4_8) else "0";
    icmp_ln37_fu_428_p2 <= "1" when (indvar_flatten_reg_295 = ap_const_lv7_40) else "0";
    icmp_ln39_fu_446_p2 <= "1" when (i_1_reg_317 = ap_const_lv4_8) else "0";
    icmp_ln43_fu_514_p2 <= "1" when (i_2_reg_328 = ap_const_lv4_8) else "0";
    icmp_ln48_fu_526_p2 <= "1" when (indvar_flatten19_reg_340 = ap_const_lv7_40) else "0";
    icmp_ln50_fu_544_p2 <= "1" when (i_3_reg_362 = ap_const_lv4_8) else "0";
    in_block_0_address0 <= grp_dct_1d_fu_373_src_address0;

    in_block_0_ce0_assign_proc : process(grp_dct_1d_fu_373_src_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_0_ce0 <= grp_dct_1d_fu_373_src_ce0;
        else 
            in_block_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_1_address0 <= grp_dct_1d_fu_373_src1_address0;

    in_block_1_ce0_assign_proc : process(grp_dct_1d_fu_373_src1_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_1_ce0 <= grp_dct_1d_fu_373_src1_ce0;
        else 
            in_block_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_2_address0 <= grp_dct_1d_fu_373_src2_address0;

    in_block_2_ce0_assign_proc : process(grp_dct_1d_fu_373_src2_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_2_ce0 <= grp_dct_1d_fu_373_src2_ce0;
        else 
            in_block_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_3_address0 <= grp_dct_1d_fu_373_src3_address0;

    in_block_3_ce0_assign_proc : process(grp_dct_1d_fu_373_src3_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_3_ce0 <= grp_dct_1d_fu_373_src3_ce0;
        else 
            in_block_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_4_address0 <= grp_dct_1d_fu_373_src4_address0;

    in_block_4_ce0_assign_proc : process(grp_dct_1d_fu_373_src4_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_4_ce0 <= grp_dct_1d_fu_373_src4_ce0;
        else 
            in_block_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_5_address0 <= grp_dct_1d_fu_373_src5_address0;

    in_block_5_ce0_assign_proc : process(grp_dct_1d_fu_373_src5_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_5_ce0 <= grp_dct_1d_fu_373_src5_ce0;
        else 
            in_block_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_6_address0 <= grp_dct_1d_fu_373_src6_address0;

    in_block_6_ce0_assign_proc : process(grp_dct_1d_fu_373_src6_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_6_ce0 <= grp_dct_1d_fu_373_src6_ce0;
        else 
            in_block_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    in_block_7_address0 <= grp_dct_1d_fu_373_src7_address0;

    in_block_7_ce0_assign_proc : process(grp_dct_1d_fu_373_src7_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_block_7_ce0 <= grp_dct_1d_fu_373_src7_ce0;
        else 
            in_block_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_538_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_1_phi_fu_355_p4) + unsigned(ap_const_lv4_1));
    j_fu_440_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(ap_phi_mux_j_0_phi_fu_310_p4));
    out_block_address0 <= zext_ln51_3_fu_617_p1(6 - 1 downto 0);

    out_block_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            out_block_ce0 <= ap_const_logic_1;
        else 
            out_block_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_block_d0 <= col_outbuf_load_reg_707;

    out_block_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln48_reg_675_pp1_iter2_reg, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln48_reg_675_pp1_iter2_reg = ap_const_lv1_0))) then 
            out_block_we0 <= ap_const_logic_1;
        else 
            out_block_we0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_dct_1d_fu_373_dst_address0, ap_CS_fsm_state3, ap_block_pp0_stage0, zext_ln40_3_fu_498_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            row_outbuf_address0 <= zext_ln40_3_fu_498_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            row_outbuf_address0 <= grp_dct_1d_fu_373_dst_address0;
        else 
            row_outbuf_address0 <= "XXXXXX";
        end if; 
    end process;


    row_outbuf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1, grp_dct_1d_fu_373_dst_ce0, ap_CS_fsm_state3)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            row_outbuf_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            row_outbuf_ce0 <= grp_dct_1d_fu_373_dst_ce0;
        else 
            row_outbuf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_outbuf_we0_assign_proc : process(grp_dct_1d_fu_373_dst_we0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            row_outbuf_we0 <= grp_dct_1d_fu_373_dst_we0;
        else 
            row_outbuf_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln40_1_fu_460_p3 <= 
        j_fu_440_p2 when (icmp_ln39_fu_446_p2(0) = '1') else 
        ap_phi_mux_j_0_phi_fu_310_p4;
    select_ln40_fu_452_p3 <= 
        ap_const_lv4_0 when (icmp_ln39_fu_446_p2(0) = '1') else 
        i_1_reg_317;
    select_ln51_1_fu_558_p3 <= 
        j_2_fu_538_p2 when (icmp_ln50_fu_544_p2(0) = '1') else 
        ap_phi_mux_j_1_phi_fu_355_p4;
    select_ln51_fu_550_p3 <= 
        ap_const_lv4_0 when (icmp_ln50_fu_544_p2(0) = '1') else 
        i_3_reg_362;
    tmp_1_fu_597_p3 <= (select_ln51_1_reg_690_pp1_iter2_reg & ap_const_lv3_0);
    tmp_2_fu_575_p3 <= (select_ln51_reg_684 & ap_const_lv3_0);
    tmp_fu_481_p3 <= (select_ln40_reg_640 & ap_const_lv3_0);
    trunc_ln40_fu_468_p1 <= select_ln40_fu_452_p3(3 - 1 downto 0);
    zext_ln40_1_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_reg_645),8));
    zext_ln40_2_fu_488_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_481_p3),8));
    zext_ln40_3_fu_498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln40_fu_492_p2),64));
    zext_ln40_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_reg_645_pp0_iter1_reg),64));
    zext_ln51_1_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_597_p3),8));
    zext_ln51_2_fu_608_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_reg_684_pp1_iter2_reg),8));
    zext_ln51_3_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_fu_611_p2),64));
    zext_ln51_4_fu_582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_575_p3),8));
    zext_ln51_5_fu_592_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln51_1_fu_586_p2),64));
    zext_ln51_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln51_1_reg_690),8));
end behav;
